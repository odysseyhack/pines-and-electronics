{
  "contractName": "CarController",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_command",
          "type": "string"
        }
      ],
      "name": "CarCommandSent",
      "type": "event",
      "signature": "0x787974f576d067af0a10f4ded8c490181c968b0778f075dfa5ab9e2501a4836f"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_command",
          "type": "string"
        }
      ],
      "name": "sendCommand",
      "outputs": [
        {
          "name": "commandSent",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8aed8040"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506101d5806100206000396000f3fe608060405234801561001057600080fd5b5060043610610047577c010000000000000000000000000000000000000000000000000000000060003504638aed8040811461004c575b600080fd5b6100f26004803603602081101561006257600080fd5b81019060208101813564010000000081111561007d57600080fd5b82018360208201111561008f57600080fd5b803590602001918460018302840111640100000000831117156100b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610106945050505050565b604080519115158252519081900360200190f35b60007f787974f576d067af0a10f4ded8c490181c968b0778f075dfa5ab9e2501a4836f826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016757818101518382015260200161014f565b50505050905090810190601f1680156101945780820380516001836020036101000a031916815260200191505b509250505060405180910390a150600191905056fea165627a7a723058201cc1fac651babd9939850f716a2cffff1549d3a1996fa84aa4aa837cac8462950029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610047577c010000000000000000000000000000000000000000000000000000000060003504638aed8040811461004c575b600080fd5b6100f26004803603602081101561006257600080fd5b81019060208101813564010000000081111561007d57600080fd5b82018360208201111561008f57600080fd5b803590602001918460018302840111640100000000831117156100b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610106945050505050565b604080519115158252519081900360200190f35b60007f787974f576d067af0a10f4ded8c490181c968b0778f075dfa5ab9e2501a4836f826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016757818101518382015260200161014f565b50505050905090810190601f1680156101945780820380516001836020036101000a031916815260200191505b509250505060405180910390a150600191905056fea165627a7a723058201cc1fac651babd9939850f716a2cffff1549d3a1996fa84aa4aa837cac8462950029",
  "sourceMap": "134:648:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:648:0;;;;;;;",
  "deployedSourceMap": "134:648:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:648:0;;;;;;;;;;;;;;;;;;;574:205;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;574:205:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;574:205:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;574:205:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;574:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;574:205:0;;-1:-1:-1;574:205:0;;-1:-1:-1;;;;;574:205:0:i;:::-;;;;;;;;;;;;;;;;;;;666:16;704:46;732:8;704:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;704:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;768:4:0;574:205;;;:::o",
  "source": "pragma solidity 0.5.3;\n\n/**\n * @title Car Controller\n * @author Pines & Electronics\n *\n * @dev Simple contract emitting an event.\n */\ncontract CarController {\n\n\n    /**\n     * @dev CarCommandSent event register in the log the commands that you send to the car.\n     */\n    event CarCommandSent(\n        string _command\n    );\n\n    /**\n     * @notice Send command\n     *\n     * @dev send the event with the car command.\n     *\n     * @param _command refers to the attribute value, limited to 2048 bytes.\n     * @return true when the command was emitted properly.\n     */\n    function sendCommand (\n        string memory _command\n    )\n        public\n        returns (bool commandSent)\n    {\n\n        emit CarCommandSent(\n            _command\n        );\n\n        return true;\n    }\n\n}\n",
  "sourcePath": "/home/eruiz/Odyssey/pines-and-electronics/dao/contracts/CarController.sol",
  "ast": {
    "absolutePath": "/home/eruiz/Odyssey/pines-and-electronics/dao/contracts/CarController.sol",
    "exportedSymbols": {
      "CarController": [
        20
      ]
    },
    "id": 21,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Car Controller\n@author Pines & Electronics\n * @dev Simple contract emitting an event.",
        "fullyImplemented": true,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "CarController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev CarCommandSent event register in the log the commands that you send to the car.",
            "id": 5,
            "name": "CarCommandSent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "indexed": false,
                  "name": "_command",
                  "nodeType": "VariableDeclaration",
                  "scope": 5,
                  "src": "303:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "293:31:0"
            },
            "src": "273:52:0"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "688:91:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13,
                        "name": "_command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "732:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 12,
                      "name": "CarCommandSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "704:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "EmitStatement",
                  "src": "699:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "768:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11,
                  "id": 17,
                  "nodeType": "Return",
                  "src": "761:11:0"
                }
              ]
            },
            "documentation": "@notice Send command\n     * @dev send the event with the car command.\n     * @param _command refers to the attribute value, limited to 2048 bytes.\n@return true when the command was emitted properly.",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendCommand",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "_command",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "605:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:38:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "commandSent",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "666:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "665:18:0"
            },
            "scope": 20,
            "src": "574:205:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 21,
        "src": "134:648:0"
      }
    ],
    "src": "0:783:0"
  },
  "legacyAST": {
    "absolutePath": "/home/eruiz/Odyssey/pines-and-electronics/dao/contracts/CarController.sol",
    "exportedSymbols": {
      "CarController": [
        20
      ]
    },
    "id": 21,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Car Controller\n@author Pines & Electronics\n * @dev Simple contract emitting an event.",
        "fullyImplemented": true,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "CarController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev CarCommandSent event register in the log the commands that you send to the car.",
            "id": 5,
            "name": "CarCommandSent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "indexed": false,
                  "name": "_command",
                  "nodeType": "VariableDeclaration",
                  "scope": 5,
                  "src": "303:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "293:31:0"
            },
            "src": "273:52:0"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "688:91:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13,
                        "name": "_command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "732:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 12,
                      "name": "CarCommandSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "704:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "EmitStatement",
                  "src": "699:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "768:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11,
                  "id": 17,
                  "nodeType": "Return",
                  "src": "761:11:0"
                }
              ]
            },
            "documentation": "@notice Send command\n     * @dev send the event with the car command.\n     * @param _command refers to the attribute value, limited to 2048 bytes.\n@return true when the command was emitted properly.",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendCommand",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "_command",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "605:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:38:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "commandSent",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "666:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "665:18:0"
            },
            "scope": 20,
            "src": "574:205:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 21,
        "src": "134:648:0"
      }
    ],
    "src": "0:783:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {
    "8996": {
      "events": {},
      "links": {},
      "address": "0xc26b19D7CB4695704d7957e27dD7cD4D79dAa073",
      "transactionHash": "0xdf9eb506d8a57dc45cb508469c7bd2f4d98182273e9d1cb096f55205479c60a8"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-12T19:59:39.514Z",
  "devdoc": {
    "author": "Pines & Electronics",
    "details": "Simple contract emitting an event.",
    "methods": {
      "sendCommand(string)": {
        "details": "send the event with the car command.",
        "params": {
          "_command": "refers to the attribute value, limited to 2048 bytes."
        },
        "return": "true when the command was emitted properly."
      }
    },
    "title": "Car Controller"
  },
  "userdoc": {
    "methods": {
      "sendCommand(string)": {
        "notice": "Send command"
      }
    }
  }
}